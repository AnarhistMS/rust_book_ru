diff --git a/rust/master:src/doc/trpl/glossary.md b/fix_current_version:glossary.md
index 9789832..3e64fb7 100644
--- a/rust/master:src/doc/trpl/glossary.md
+++ b/fix_current_version:glossary.md
@@ -1,11 +1,10 @@
-% Glossary
+% Глоссарий
 
-Not every Rustacean has a background in systems programming, nor in computer
-science, so we've added explanations of terms that might be unfamiliar.
+Не каждый пользователь Rust имеет опыт работы с системами программирования, или необходимые знания в области компьютерной науки, поэтому мы добавили разъяснения терминов, которые могут быть незнакомы.
 
-### Arity
+### Арность
 
-Arity refers to the number of arguments a function or operation takes.
+Арность относится к числу аргументов функции или операции, котое они принимают.
 
 ```rust
 let x = (2, 3);
@@ -13,14 +12,11 @@ let y = (4, 6);
 let z = (8, 2, 6);
 ```
 
-In the example above `x` and `y` have arity 2. `z` has arity 3.
+В приведенном выше примере `x` и `y` имеют арность 2. `z` имеет арность 3.
 
-### Abstract Syntax Tree
+### Абстрактное синтаксическое дерево (Дерево абстрактного синтаксического анализа)
 
-When a compiler is compiling your program, it does a number of different
-things. One of the things that it does is turn the text of your program into an
-'abstract syntax tree,' or 'AST.' This tree is a representation of the
-structure of your program. For example, `2 + 3` can be turned into a tree:
+Когда компилятор компилирует программу, он делает целый ряд различных вещей. Одна из вещей, которые он делает, это преобразует текст вашей программы в 'Абстрактное синтаксическое дерево,' или 'AST.' Это дерево является представлением структуры вашей программы. Например, `2 + 3` может быть преобразовано в дерево:
 
 ```text
   +
@@ -28,7 +24,7 @@ structure of your program. For example, `2 + 3` can be turned into a tree:
 2   3
 ```
 
-And `2 + (3 * 4)` would look like this:
+А `2 + (3 * 4)` будет выглядеть следующим образом:
 
 ```text
   +
