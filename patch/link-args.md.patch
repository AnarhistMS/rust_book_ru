diff --git a/rust/master:./src/doc/trpl/link-args.md b/HEAD:./nightly-rust/link-args.md
index ee5159a..510d4e6 100644
--- a/rust/master:./src/doc/trpl/link-args.md
+++ b/HEAD:./nightly-rust/link-args.md
@@ -1,25 +1,26 @@
-% Link args
+% Аргументы линковки (Link args)
 
-There is one other way to tell rustc how to customize linking, and that is via
-the `link_args` attribute. This attribute is applied to `extern` blocks and
-specifies raw flags which need to get passed to the linker when producing an
-artifact. An example usage would be:
+Еще один способ указать rustc как настроить линковку - с помощью атрибута
+`link_args`. Этот атрибут применяется к блокам `extern` и определяет исходные
+флаги, которые нужно передать линковщику (компоновщику) при производстве
+артефакта. Пример использования:
 
 ``` no_run
 #![feature(link_args)]
 
 #[link_args = "-foo -bar -baz"]
 extern {}
 # fn main() {}
 ```
 
-Note that this feature is currently hidden behind the `feature(link_args)` gate
-because this is not a sanctioned way of performing linking. Right now rustc
-shells out to the system linker, so it makes sense to provide extra command line
-arguments, but this will not always be the case. In the future rustc may use
-LLVM directly to link native libraries in which case `link_args` will have no
-meaning.
+Обратите внимание, что эта фича в настоящее время находится в закрытых фичах
+(feature gate), `feature(link_args)`, потому что это не санкционированный способ
+выполнения линковки. Сейчас rustc выходит на (использует) системный линкер,
+поэтому имеет смысл предоставить дополнительные аргументы командной строки, но
+это не всегда будет так. В будущем rustc может использовать LLVM
+непосредственно, чтобы линковать нативные библиотеки, и в этом случае
+`link_args` не будет иметь никакого смысла.
 
-It is highly recommended to *not* use this attribute, and rather use the more
-formal `#[link(...)]` attribute on `extern` blocks instead.
+Настоятельно рекомендуется не использовать этот атрибут, вместо него лучше
+использовать более формальный атрибут `#[link(...)]` для блоков `extern`.
 
