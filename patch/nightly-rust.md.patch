diff --git a/rust/master:src/doc/trpl/nightly-rust.md b/HEAD:nightly-rust.md
index 3b76cce..b0fb0f5 100644
--- a/rust/master:src/doc/trpl/nightly-rust.md
+++ b/HEAD:nightly-rust.md
@@ -1,102 +1,47 @@
-% Nightly Rust
+% Нестабильные фичи Rust
 
-Rust provides three distribution channels for Rust: nightly, beta, and stable.
-Unstable features are only available on nightly Rust. For more details on this
-process, see ‘[Stability as a deliverable][stability]’.
+Rust обеспечивает три канала распространения для Rust: nightly, beta и stable.
+Нестабильные функции доступны только на nightly Rust. Для более подробной
+информации об этом процессе смотрите [этот пост](http://blog.rust-lang.org/2014/10/30/Stability.html).
 
-[stability]: http://blog.rust-lang.org/2014/10/30/Stability.html
-
-To install nightly Rust, you can use `rustup.sh`:
+Чтобы установить nightly Rust, вы можете использовать `rustup.sh`:
 
 ```bash
 $ curl -s https://static.rust-lang.org/rustup.sh | sudo sh -s -- --channel=nightly
 ```
 
-If you're concerned about the [potential insecurity][insecurity] of using `curl
-| sudo sh`, please keep reading and see our disclaimer below. And feel free to
-use a two-step version of the installation and examine our installation script:
+Если вы беспокоитесь о [потенциальной безопасности](http://curlpipesh.tumblr.com/)
+использования данной команды `curl | sudo sh`, то продолжайте читать далее. Вы
+также можете использовать двухступенчатый вариант установки и изучить наш
+установочный скрипт:
 
 ```bash
 $ curl -f -L https://static.rust-lang.org/rustup.sh -O
 $ sudo sh rustup.sh --channel=nightly
 ```
 
-[insecurity]: http://curlpipesh.tumblr.com
+Если вы используете Windows, то, пожалуйста, скачайте один из установочных
+пакетов: [32-битный](https://static.rust-lang.org/dist/rust-nightly-i686-pc-windows-gnu.exe)
+или [64-битный](https://static.rust-lang.org/dist/rust-nightly-x86_64-pc-windows-gnu.exe)
+и запустите его.
 
-If you're on Windows, please download either the [32-bit installer][win32] or
-the [64-bit installer][win64] and run it.
-
-[win32]: https://static.rust-lang.org/dist/rust-1.0.0-beta-i686-pc-windows-gnu.msi
-[win64]: https://static.rust-lang.org/dist/rust-1.0.0-beta-x86_64-pc-windows-gnu.msi
-
-## Uninstalling
-
-If you decide you don't want Rust anymore, we'll be a bit sad, but that's okay.
-Not every programming language is great for everyone. Just run the uninstall
-script:
+Если вы решили, что Rust вам больше не нужен, то мы будем чуть-чуть огорчены, но
+это нормально. Не каждый язык программирования отлично подходит для всех. Просто
+запустите скрипт деинсталляции:
 
 ```bash
 $ sudo /usr/local/lib/rustlib/uninstall.sh
 ```
 
-If you used the Windows installer, just re-run the `.msi` and it will give you
-an uninstall option.
+Если вы использовали установщик Windows, то просто повторно запустите `.exe`, и
+это даст вам возможность удаления.
 
-Some people, and somewhat rightfully so, get very upset when we tell you to
-`curl | sudo sh`. Basically, when you do this, you are trusting that the good
-people who maintain Rust aren't going to hack your computer and do bad things.
-That's a good instinct! If you're one of those people, please check out the
-documentation on [building Rust from Source][from source], or [the official
-binary downloads][install page]. And we promise that this method will not be
-the way to install Rust forever: it's just the easiest way to keep people
-updated while Rust is in its alpha state.
+Для того, чтобы обновить Rust, вы можете повторно запустить этот скрипт. На
+данный момент Rust все еще находится в стадии pre-1.0 и очень часто обновляется.
 
-[from source]: https://github.com/rust-lang/rust#building-from-source
-[install page]: http://www.rust-lang.org/install.html
+Команда установки `curl | sudo sh` потенциально опасна, т.к. скрипт установки
+запускается с правами администратора, что может нарушить безопасность системы.
+Скрипт был сделан для быстрого обновления пока Rust находится в стадии alpha.
+Для безопасной установки Rust предлагаем изучить документацию по [установке Rust из исходных кодов](https://github.com/rust-lang/rust#building-from-source)
+или скачать уже [скомпилированный Rust](http://www.rust-lang.org/install.html).
 
-Oh, we should also mention the officially supported platforms:
-
-* Windows (7, 8, Server 2008 R2)
-* Linux (2.6.18 or later, various distributions), x86 and x86-64
-* OSX 10.7 (Lion) or greater, x86 and x86-64
-
-We extensively test Rust on these platforms, and a few others, too, like
-Android. But these are the ones most likely to work, as they have the most
-testing.
-
-Finally, a comment about Windows. Rust considers Windows to be a first-class
-platform upon release, but if we're honest, the Windows experience isn't as
-integrated as the Linux/OS X experience is. We're working on it! If anything
-does not work, it is a bug. Please let us know if that happens. Each and every
-commit is tested against Windows just like any other platform.
-
-If you've got Rust installed, you can open up a shell, and type this:
-
-```bash
-$ rustc --version
-```
-
-You should see the version number, commit hash, commit date and build date:
-
-```bash
-rustc 1.0.0-nightly (f11f3e7ba 2015-01-04) (built 2015-01-06)
-```
-
-If you did, Rust has been installed successfully! Congrats!
-
-This installer also installs a copy of the documentation locally, so you can
-read it offline. On UNIX systems, `/usr/local/share/doc/rust` is the location.
-On Windows, it's in a `share/doc` directory, inside wherever you installed Rust
-to.
-
-If not, there are a number of places where you can get help. The easiest is
-[the #rust IRC channel on irc.mozilla.org][irc], which you can access through
-[Mibbit][mibbit]. Click that link, and you'll be chatting with other Rustaceans
-(a silly nickname we call ourselves), and we can help you out. Other great
-resources include [the user’s forum][users], and [Stack Overflow][stack
-overflow].
-
-[irc]: irc://irc.mozilla.org/#rust
-[mibbit]: http://chat.mibbit.com/?server=irc.mozilla.org&channel=%23rust
-[users]: http://users.rust-lang.org/ 
-[stack overflow]: http://stackoverflow.com/questions/tagged/rust
