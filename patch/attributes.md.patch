diff --git a/rust/master:src/doc/trpl/attributes.md b/HEAD:attributes.md
index 6349647..037f6c5 100644
--- a/rust/master:src/doc/trpl/attributes.md
+++ b/HEAD:attributes.md
@@ -1,70 +1,71 @@
-% Attributes
+% Атрибуты
 
-Declarations can be annotated with ‘attributes’ in Rust. They look like this:
+В Rust объявления могут быть аннотированы с помощью ‘атрибутов‘. Они выглядят
+так:
 
 ```rust
 #[test]
 # fn foo() {}
 ```
 
-or like this:
+или так:
 
 ```rust
 # mod foo {
 #![test]
 # }
 ```
 
-The difference between the two is the `!`, which changes what the attribute
-applies to:
+Разница между ними состоит в символе `!`, который изменяет его поведение,
+определяющее к какому элементу применяется атрибут:
 
 ```rust,ignore
 #[foo]
 struct Foo;
 
 mod bar {
     #![bar]
 }
 ```
 
-The `#[foo]` attribute applies to the next item, which is the `struct`
-declaration. The `#![bar]` attribute applies to the item enclosing it, which is
-the `mod` declaration. Otherwise, they’re the same. Both change the meaning of
-the item they’re attached to somehow.
+Атрибут `#[foo]` относится к следующему за ним элементу, который является
+объявлением `struct`. Атрибут `#![bar]` относится к элементу охватывающему его,
+который является объявлением `mod`. В остальном они одинаковы. Оба каким-то
+образом изменяют значение элемента, к которому они прикрепленны.
 
-For example, consider a function like this:
+Например, рассмотрим такую функцию:
 
 ```rust
 #[test]
 fn check() {
     assert_eq!(2, 1 + 1);
 }
 ```
 
-It is marked with `#[test]`. This means it’s special: when you run
-[tests][tests], this function will execute. When you compile as usual, it won’t
-even be included. This function is now a test function.
+Фунуция помечена как `#[test]`. Это означает, что она особенная: эта функция
+будет выполняться при запуске [тестов][tests]. При компиляции, как правило, она
+не будет включена. Теперь эта функция является функцией тестирования.
 
 [tests]: testing.html
 
-Attributes may also have additional data:
+Атрибуты также могут иметь дополнительные данные:
 
 ```rust
 #[inline(always)]
 fn super_fast_fn() {
 # }
 ```
 
-Or even keys and values:
+Или даже ключи и значения:
 
 ```rust
 #[cfg(target_os = "macos")]
 mod macos_only {
 # }
 ```
 
-Rust attributes are used for a number of different things. There is a full list
-of attributes [in the reference][reference]. Currently, you are not allowed to
-create your own attributes, the Rust compiler defines them.
+Атрибуты в Rust используются для ряда различных вещей. Вот [ссылка][reference]
+на полный список атрибутов. В настоящее время вы не можете создавать свои
+собственные атрибуты, компилятор Rust определяет их.
 
 [reference]: ../reference.html#attributes
